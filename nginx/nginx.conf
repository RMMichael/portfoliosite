 # also check out docker container for nginx https://github.com/nginx-proxy/nginx-proxy
 user nginx;
 worker_processes auto;
 worker_rlimit_nofile 2500;
 pid /run/nginx.pid;

error_log  /var/log/nginx/error.log warn;


# 'user nobody nobody;' for systems with 'nobody' as a group instead

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;
    tcp_nopush  on;
    tcp_nodelay on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    upstream app_server {
        server backend:3031;
    }
  # server {
     # if no Host match, close the connection to prevent host spoofing
  #   listen 80 default_server;
  #   return 444;
  # }
  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    client_max_body_size 4G;
    server_name www.rickmichael.dev rickmichael.dev;

    # set the correct host(s) for your site
    server_name localhost;

    keepalive_timeout 5;

    # for certbot challenges (tls cert renewal)
    location ^~ /.well-known/acme-challenge/ {
      allow all;
      root  /usr/share/nginx/html;
    }
    # redirect http to https
    location / {
      return 301 https://$host$request_uri;
    }
}
    # path for static files
   #  root /path/to/app/current/public;

     location / {
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header Host $http_host;
       # we don't want nginx trying to do something clever with
       # redirects, we set the Host: header above already.
       proxy_redirect off;
       proxy_pass http://app_server;
     }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /path/to/app/current/public;
    }
  }
      server {
          listen [::]:443 ssl ipv6only=on;
          listen 443 ssl;
          server_name www.rickmichael.dev rickmichael.dev;

          # ssl conf from /etc/letsencrypt/options-ssl-nginx.conf
          ssl_session_cache shared:le_nginx_SSL:10m;
          ssl_session_timeout 1440m;
          ssl_session_tickets off;
          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_prefer_server_ciphers off;
          ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

          ssl_certificate /etc/letsencrypt/live/rickmichael.dev/fullchain.pem;
          ssl_certificate_key  /etc/letsencrypt/live/rickmichael.dev/privkey.pem;
          ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

          location /api {
              proxy_pass  http://backend:3000;
          }

          location / {
              # This would be the directory where your React app's static files are stored at
              root /usr/share/nginx/html;
              try_files $uri /index.html;
          }
      }
}

